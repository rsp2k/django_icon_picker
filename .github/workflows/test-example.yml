name: Test Django Example Project

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
        django-version: [3.2, 4.0, 4.1, 4.2, 5.0]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: 3.9
            django-version: 5.0

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}
        pip install -e ./django-icon-picker/

    - name: Run Django checks
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py check

    - name: Run migrations
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Collect static files
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py collectstatic --noinput

    - name: Run Django tests
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py test

    - name: Test Django development server startup
      working-directory: ./django_icon_picker_example
      run: |
        timeout 10s python manage.py runserver || true
        echo "Development server can start successfully"
