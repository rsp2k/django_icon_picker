name: Test Django Example Project

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
        django-version: [4.2, 5.0, 5.1]
        exclude:
          # Django 5.0+ requires Python 3.10+
          - python-version: 3.9
            django-version: 5.0
          - python-version: 3.9
            django-version: 5.1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==${{ matrix.django-version }}
        pip install -e ./django-icon-picker/

    - name: Run Django checks
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py check

    - name: Run migrations
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Collect static files
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py collectstatic --noinput

    - name: Run Django tests
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py test

    - name: Test Django development server startup
      working-directory: ./django_icon_picker_example
      run: |
        timeout 10s python manage.py runserver || true
        echo "Development server can start successfully"

  screenshots:
    runs-on: ubuntu-latest
    needs: test
    # Only run screenshots after tests pass

    env:
      BASE_URL: http://127.0.0.1:8000
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'django-insecure-screenshots-ci-key-not-for-production-12345' }}
      DEBUG: 'True'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Set up Node.js for Playwright
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install Django==5.1
        pip install -e ./django-icon-picker/
        pip install playwright

    - name: Install Playwright browsers
      run: |
        playwright install --with-deps chromium

    - name: Prepare Django project
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py migrate
        python manage.py collectstatic --noinput

    - name: Create test superuser
      working-directory: ./django_icon_picker_example
      run: |
        echo "from django.contrib.auth import get_user_model; User = get_user_model(); \
        User.objects.filter(username='screenshots').exists() or \
        User.objects.create_superuser('screenshots', 'test@example.com', 'testpassword123')" \
        | python manage.py shell
      env:
        DJANGO_SUPERUSER_USERNAME: screenshots
        DJANGO_SUPERUSER_PASSWORD: testpassword123

    - name: Start Django development server
      working-directory: ./django_icon_picker_example
      run: |
        python manage.py runserver 0.0.0.0:8000 &
        echo $! > django_server.pid
        echo "Django server started with PID $(cat django_server.pid)"
        
        # Wait for Django to start up
        echo "Waiting for Django server to be ready..."
        for i in {1..30}; do
          if curl -f http://127.0.0.1:8000/admin/login/ > /dev/null 2>&1; then
            echo "Django server is ready!"
            break
          fi
          echo "Attempt $i: Django server not ready yet, waiting..."
          sleep 2
        done
        
        # Final check
        if ! curl -f http://127.0.0.1:8000/admin/login/ > /dev/null 2>&1; then
          echo "ERROR: Django server failed to start properly"
          cat django_server.pid
          ps aux | grep manage.py
          exit 1
        fi

    - name: Take screenshots
      run: |
        python take_screenshots.py
      env:
        DJANGO_SUPERUSER_USERNAME: screenshots
        DJANGO_SUPERUSER_PASSWORD: testpassword123
        BASE_URL: http://127.0.0.1:8000

    - name: Upload screenshots as artifact
      uses: actions/upload-artifact@v4
      if: always()  # Upload even if screenshot step fails
      with:
        name: django-icon-picker-screenshots
        path: screenshots/
        retention-days: 30

    - name: Stop Django server
      if: always()
      working-directory: ./django_icon_picker_example
      run: |
        if [ -f django_server.pid ]; then
          kill $(cat django_server.pid) || true
          rm django_server.pid
        fi
